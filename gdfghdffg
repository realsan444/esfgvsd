local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

    local Window = Rayfield:CreateWindow({
   Name = "Boss Hub",
   LoadingTitle = "bOsS hUb Gui Your go-to for finding scripts",
   LoadingSubtitle = "by imA_coolLOLw",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "BossyHubby", -- Create a custom folder for your hub/game
      FileName = "Logs"
   },
   Discord = {
      Enabled = true,
      Invite = "Amh9WzgH", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "bOsS KEY SYSTEMüóùÔ∏è",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Logs", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"KEY_KEY_)645645654hhvugygy8eerg887t4htgn45to348t()", "FreeKeyForFriends"}
   }
})

local MainTab = Window:CreateTab("Home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Executed!",
   Content = "bOsS hUb will be loafing shortly",
   Duration = 3.5,
   Image = nil,
   Actions = { -- Notification Buttons

      Ignore = { -- Duplicate this table (or remove it) to add and remove buttons to the notification.
         Name = "NICE",
         Callback = function()
            print("Blank")
         end
      },

},
})

local Button = MainTab:CreateButton({
   Name = "inf Jump",
   Callback = function()
local InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "WalkSider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})
